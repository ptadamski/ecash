//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Alicja.ShopService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ShopService.IShopService", CallbackContract=typeof(Alicja.ShopService.IShopServiceCallback))]
    public interface IShopService {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IShopService/doInit")]
        void doInit(Common.Banknote aBanknote);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IShopService/doInit")]
        System.Threading.Tasks.Task doInitAsync(Common.Banknote aBanknote);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IShopService/doVerifySignature")]
        void doVerifySignature();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IShopService/doVerifySignature")]
        System.Threading.Tasks.Task doVerifySignatureAsync();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IShopService/doChooseSides")]
        void doChooseSides();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IShopService/doChooseSides")]
        System.Threading.Tasks.Task doChooseSidesAsync();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IShopService/doVerifyBanknote")]
        void doVerifyBanknote();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IShopService/doVerifyBanknote")]
        System.Threading.Tasks.Task doVerifyBanknoteAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IShopServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IShopService/onInit")]
        void onInit();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IShopService/onVerifySignature")]
        void onVerifySignature();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IShopService/onChooseSides")]
        void onChooseSides();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IShopService/onVerifyBanknote")]
        void onVerifyBanknote();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IShopServiceChannel : Alicja.ShopService.IShopService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ShopServiceClient : System.ServiceModel.DuplexClientBase<Alicja.ShopService.IShopService>, Alicja.ShopService.IShopService {
        
        public ShopServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ShopServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ShopServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ShopServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ShopServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void doInit(Common.Banknote aBanknote) {
            base.Channel.doInit(aBanknote);
        }
        
        public System.Threading.Tasks.Task doInitAsync(Common.Banknote aBanknote) {
            return base.Channel.doInitAsync(aBanknote);
        }
        
        public void doVerifySignature() {
            base.Channel.doVerifySignature();
        }
        
        public System.Threading.Tasks.Task doVerifySignatureAsync() {
            return base.Channel.doVerifySignatureAsync();
        }
        
        public void doChooseSides() {
            base.Channel.doChooseSides();
        }
        
        public System.Threading.Tasks.Task doChooseSidesAsync() {
            return base.Channel.doChooseSidesAsync();
        }
        
        public void doVerifyBanknote() {
            base.Channel.doVerifyBanknote();
        }
        
        public System.Threading.Tasks.Task doVerifyBanknoteAsync() {
            return base.Channel.doVerifyBanknoteAsync();
        }
    }
}
